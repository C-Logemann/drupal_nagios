#!/bin/bash
#
# Drupal monitoring plugin for Nagios
#
# Requires a Drupal module from http://drupal.org/project/nagios
#
# Copyright 2009 Khalid Baheyeldin http://2bits.com
#
ECHO="/bin/echo"
GREP="/bin/egrep"
RM="/bin/rm"
WGET="/usr/bin/wget"

PROGNAME=`/usr/bin/basename $0`
PROGPATH=`echo $0 | sed -e 's,[\\/][^\\/][^\\/]*$,,'`
REVISION=`echo '$Revision$' | sed -e 's/[^0-9.]//g'`

. $PROGPATH/utils.sh

print_usage() {
  $ECHO "Usage: $PROGNAME -u unique_id [ -H host_name ] [ -p path_to_nagios_status_page ] [ -T time_out_seconds ]"
  $ECHO "Usage: $PROGNAME --help"
  $ECHO "Usage: $PROGNAME --version"
}

print_help() {
  print_revision $PROGNAME $REVISION
  $ECHO ""
  print_usage
  $ECHO ""
  $ECHO "Drupal monitoring plugin for Nagios"
  $ECHO ""
  support
}


# Debugging stuff, do not enable unless you need to
#
#DEBUG=/tmp/nagios.tmp
#> $DEBUG
# echo "args: $*" >> $DEBUG

# Make sure the correct number of command line
# arguments have been supplied
if [ $# -lt 1 ]; then
  print_usage
  exit $STATE_UNKNOWN
fi

# Grab the command line arguments

exitstatus=$STATE_WARNING

while test -n "$1"; do
  case "$1" in
    --help)
      print_help
      exit $STATE_OK
      ;;
    -h)
      print_help
      exit $STATE_OK
      ;;
    --version)
      print_revision $PROGNAME $REVISION
      exit $STATE_OK
      ;;
    -V)
      print_revision $PROGNAME $REVISION
      exit $STATE_OK
      ;;
    -H)
      hostname=$2
      shift
      ;;
    -u)
      unique_id=$2
      shift
      ;;
    -p)
      path=$2
      shift
      ;;
    -T) 
      timeout=$2
      shift
            ;;
    *)
      $ECHO "Unknown argument: $1"
      print_usage
      exit $STATE_UNKNOWN
  esac
  shift
done

# Set a default for hostname
if [ "$hostname" = "" ]; then
  hostname=$NAGIOS_HOSTADDRESS
fi

# Set a default for path
if [ "$path" = "" ]; then
  path="nagios"
fi

# Set the default for timeout
if [ "$timeout" = "" ]; then
  timeout=2
fi

# Set the default for timeout
if [ "$unique_id" = "" ]; then
  unique_id="Nagios"
fi

temp=/tmp/$PROGNAME.$$

CMD="$WGET -S -T $timeout -O - -U $unique_id http://$hostname/$path"

#echo $CMD >> $DEBUG

$CMD > $temp 2>&1
RC=$?

HTTP=`$GREP "HTTP/" $temp`

if [ "$RC" != 0 ]; then
  $ECHO "wget error: $RC: when accessing $hostname/$path. HTTP: $HTTP"
  $RM -f $temp
  exit $STATE_CRITICAL
fi

HTTP_CODE=`$ECHO $HTTP | awk '{print $2}'`
if [ "$HTTP" != "200" ]; then
  $ECHO "HTTP returned an error code. HTTP: $HTTP"
  $RM -f $temp
  exit $STATE_CRITICAL
fi

DATA="`$GREP "nagios=" $temp | sed -e 's/^.*nagios=//g'` - $HTTP"

STATUS=`$ECHO $DATA | awk -F, '{print $1}' | sed -e 's/DRUPAL://'`

case $STATUS in
"OK")
  exitstatus=$STATE_OK
  ;;
"INFO")
  exitstatus=$STATE_OK
  ;;
"WARNING")
  exitstatus=$STATE_WARNING
  ;;
"UNAUTHORIZED")
  exitstatus=$STATE_CRITICAL
  ;;
"ERROR")
  exitstatus=$STATE_CRITICAL
  ;;
*)
  exitstatus=$STATE_UNKNOWN
  ;;
esac

# Send the data
$ECHO "$DATA"

$RM -f $temp

exit $exitstatus
